// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250531102756_DatabaseStructure1")]
    partial class DatabaseStructure1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Instituce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Instituce");
                });

            modelBuilder.Entity("PoradceSmlouva", b =>
                {
                    b.Property<int>("PoradceId")
                        .HasColumnType("int");

                    b.Property<int>("SmlouvaId")
                        .HasColumnType("int");

                    b.HasKey("PoradceId", "SmlouvaId");

                    b.HasIndex("SmlouvaId");

                    b.ToTable("PoradciSmlouvy");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Smlouva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KlientId")
                        .HasColumnType("int");

                    b.Property<string>("Nazev")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpravceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KlientId");

                    b.HasIndex("SpravceId");

                    b.ToTable("Smlouvy");
                });

            modelBuilder.Entity("Uzivatel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumNarozeni")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstituceId")
                        .HasColumnType("int");

                    b.Property<string>("Jmeno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prijmeni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstituceId");

                    b.ToTable("Uzivatele");
                });

            modelBuilder.Entity("UzivatelRole", b =>
                {
                    b.Property<int>("UzivatelId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UzivatelId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UzivateleRole");
                });

            modelBuilder.Entity("PoradceSmlouva", b =>
                {
                    b.HasOne("Uzivatel", "Poradce")
                        .WithMany("PoradciSmlouvy")
                        .HasForeignKey("PoradceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smlouva", "Smlouva")
                        .WithMany("PoradciSmlouvy")
                        .HasForeignKey("SmlouvaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poradce");

                    b.Navigation("Smlouva");
                });

            modelBuilder.Entity("Smlouva", b =>
                {
                    b.HasOne("Uzivatel", "Klient")
                        .WithMany()
                        .HasForeignKey("KlientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Uzivatel", "Spravce")
                        .WithMany()
                        .HasForeignKey("SpravceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Klient");

                    b.Navigation("Spravce");
                });

            modelBuilder.Entity("Uzivatel", b =>
                {
                    b.HasOne("Instituce", "Instituce")
                        .WithMany()
                        .HasForeignKey("InstituceId");

                    b.Navigation("Instituce");
                });

            modelBuilder.Entity("UzivatelRole", b =>
                {
                    b.HasOne("Role", "Role")
                        .WithMany("UzivateleRole")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Uzivatel", "Uzivatel")
                        .WithMany("UzivateleRole")
                        .HasForeignKey("UzivatelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Uzivatel");
                });

            modelBuilder.Entity("Role", b =>
                {
                    b.Navigation("UzivateleRole");
                });

            modelBuilder.Entity("Smlouva", b =>
                {
                    b.Navigation("PoradciSmlouvy");
                });

            modelBuilder.Entity("Uzivatel", b =>
                {
                    b.Navigation("PoradciSmlouvy");

                    b.Navigation("UzivateleRole");
                });
#pragma warning restore 612, 618
        }
    }
}
